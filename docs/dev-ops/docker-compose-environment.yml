# 命令执行 docker-compose -f docker-compose-environment.yml up -d

services:
  mysql:
    image: mysql:8.0.41-debian
    container_name: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      TZ: Asia/Shanghai
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: city_bag  # 可选：自动创建数据库
    ports:
      - "13306:3306"
    volumes:
      - ./mysql/sql/:/docker-entrypoint-initdb.d
      - mysql_data:/var/lib/mysql  # 持久化数据
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 15s
      timeout: 30s
      retries: 10
      start_period: 45s
    networks:
      - my-network

  # phpmyadmin https://hub.docker.com/_/phpmyadmin
  phpmyadmin:
    image: phpmyadmin:5.2.2
    container_name: phpmyadmin
    hostname: phpmyadmin
    ports:
      - "8899:80"
    environment:
      - PMA_HOST=mysql
      - PMA_PORT=3306
      - MYSQL_ROOT_PASSWORD=123456
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - my-network

  # Redis
  redis:
    image: redis:7.2.3-alpine
    container_name: redis
    restart: always
    hostname: redis
    privileged: true
    ports:
      - "16379:6379"
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - my-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 15s
      retries: 3

  # RedisAdmin https://github.com/joeferner/redis-commander
  redis-admin:
    image: rediscommander/redis-commander:latest
    container_name: redis-admin
    hostname: redis-commander
    restart: always
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
      - HTTP_USER=admin
      - HTTP_PASSWORD=admin
      - LANG=C.UTF-8
      - LANGUAGE=C.UTF-8
      - LC_ALL=C.UTF-8
    networks:
      - my-network

  #rabbitmq:
  rabbitmq:
    image: rabbitmq:3.13.0-management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
      - RABBITMQ_DEFAULT_VHOST=/
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "check_running" ]
      interval: 90s
      timeout: 30s
      retries: 3
    networks:
      - my-network

networks:
  my-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local